'From Smalltalk 5.5i XM May 1 on 16 July 1980 at 3:58:07 pm.'(500)Object asFollows\f5bSystem Primitives\f5breadLoc: readLoc vectorLoc: vectorLoc length: length image: image	[user cr ; show: 'readLoc: ' ; print: readLoc ; cr ;		show: 'vectorLoc: ' ; print: vectorLoc ; cr ;		show: 'length: ' ; print: length ; cr ;		show: 'image: ' ; print: image ; cr] primitive: 2\b67BwriteLoc: writeLoc vectorLoc: vectorLoc length: length image: image	[user cr ; show: 'writeLoc: ' ; print: writeLoc ; cr ;		show: 'vectorLoc: ' ; print: vectorLoc ; cr ;		show: 'length: ' ; print: length ; cr ;		show: 'image: ' ; print: image ; cr] primitive: 3"| image	[image _ String new: 4096.	nil readLoc: 010000 vectorLoc: 0 length: 1024 image: image.	image inspect]| image i	[image _ String new: 4096.	for i from: 1 to: 4096 do [imagei _ (i - 1) \ 256].	nil writeLoc: 010000 vectorLoc: 0 length: 1024 image: image.	image inspect]| image i	[image _ String new: 4096.	(dp0 file: 'microfloatmc.br.') readonly; skipwords: 0421; into: image endError: false; close.	nil writeLoc: 010000 vectorLoc: 0 length: 1024 image: image.	]| vec i j v1 v2 x1 x2	[vec _ 10.0001 , 10.0 , 9.9999 , 3.00006 , 3.00003 , 3.0 , 1.4 , 0.7 .	v1 _ Vector new: vec length.	for i to: vec length do		[x1 _ veci.		v2 _ Vector new: vec length.		for j to: vec length do			[x2 _ vecj.			v2j _ (x1 over: x2) - (x1 / x2)].		v1i _ v2].	v1]| i j  [(user time [for i to: 1 do [for j to: 1000 do [Float new]]]) asFloat*0.03808]"\b69BSmalltalk declare: (RAM0 RAM1 RAM2)."load the RAM"| image i	[image _ String new: 4096.	(dp0 file: 'microfloatmc.br.') readonly; skipwords: 0421; into: image endError: false; close.	nil writeLoc: 010000 vectorLoc: 0 length: 1024 image: image.	RAM1 _ image.]UserView asFollows\f5bSystem quit/resume\f5boverlay: fileid | t [	dp0 stampBoot.	self releaseExternalViews.	"put the ethernet to sleep"	[Enil [] E sleep].	"turn off display during quit/resume"	t _ mem0420. mem0420 _ 0.	self InLd: fileid.	"we start here after a resume"	mem0420 _ t.	"load the RAM before anything else"	[RAM2 class  String 				[nil writeLoc: 020000 vectorLoc: 0 length: 1024 image: RAM2]].	[RAM1 class  String 				[nil writeLoc: 010000 vectorLoc: 0 length: 1024 image: RAM1]].	[RAM0 class  String 				[nil writeLoc: 000000 vectorLoc: 0 length: 1024 image: RAM0]].	while user keyset>0 do [user show: 'The keyset is stuck'; cr]]\b16B105i35IGenerator asFollows\f5bCode generation\f5bcompileIn: class		| block method nargs selector primitive	[parser _ Parser new. root _ thisContext. parser from: sourceStream to: self.	self initSymbols: class.	block _ ParsedBlock default.	selector _ parser pattern: block. nargs _ nTemps.	parser temporaries: block. primitive _ parser body: block.	parser mustBeDone. parser _ nil.	block mustReturn: true "defaults to self".		[method _ [primitive=0 and nargs=0 [block quickCode] false] []		method _ self generate: block in: class.		method1 _ primitive lshift: 8.		method2 _ primitive land: 0377.		method4 _ nargs].	class install: selector method: method literals: literals		code: [sourceParagraph is: Paragraph [sourceParagraph]			sourceStream asArray] backpointers: nil.	[HuhFlag [Huh_nil. Huh _ (self decompile: method onto: Stream default) contents. HuhFlag_false]].	selector]"compile"\b19B344i19I477iFloat asFollows\f5bArithmetic\f5b arg	[selfarg asFloat] primitive: 01071\b7B arg	[selfarg asFloat] primitive: 01070\b7B arg	[selfarg asFloat] primitive: 01067\b7B* arg	[self*arg asFloat] primitive: 01076\b7B+ arg	[self+arg asFloat] primitive: 01100\b7B- arg	[self-arg asFloat] primitive: 01077\b7B/ arg	[0.0=arg[user notify: 'Attempt to divide by 0.0']	self/arg asFloat] primitive: 01075\b7B< arg	[self<arg asFloat] primitive: 01074\b7B= arg	[arg isNumber [self = arg asFloat] false] primitive: 01073\b7B> arg	[self>arg asFloat] primitive: 01072\b7BClass asFollows\f5bInstance access\f5bnew [user croak] primitive: 01066\b4BVariableLengthClass asFollows\f5bInstance access\f5bnew: length	[length>16384 [user notify: length asString+												' is too big a String']	length>8192 [user notify: length asString+												' is too big a Vector']	length<0 [user notify: length asString+												' -- negative length is invalid']	self new: length asInteger] primitive: 01065\b13B