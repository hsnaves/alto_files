'From Smalltalk 5.5bXM July 4 on 1 August 1979 at 9:42:34 am.'\g"Aurora"l15000z20000\f5bgClass new title: 'Aurora'	subclassof: Object	fields: 'source destination function figure ground	transparentground constantregister spareone sparetwo sparethree'	declare: 'DoverB Aonly Bonly aureadloc Noop AoverB AtransoverB AtransstoreB auwriteloc Conly Donly DstoreB auselloc Setcolor CstoreB pmscreenrect CoverB AstoreB ';	asFollows\f5bgThis class has not yet been commented\igINIT\f5bgclassInit 	["specify i/o words"	auselloc _ 0177410.	auwriteloc _ 0177411.	aureadloc _ 0177412.	pmscreenrect _ (00) rect: (640480).	memauselloc _ 014000.	memauwriteloc _ 010.	AstoreB	_ 002117. "alto stream into pm"	CstoreB	_ 000117. "stores figure color block into pm"	DstoreB	_ 000517. "a/d output into pm"	AoverB	_ 002103. "alto stream over pm"	CoverB	_ 000103. "figure color block over pm"	DoverB	_ 000503. "a/d output over pm"	AtransoverB	_ 012103. "ground transparent"	AtransstoreB	_ 012117. "ground transparent"	Noop		_ 0.]\gb12BACCESS TO PARTS\f5bgdestination: destination	\gbfigure: figure	\gbfunction: function	\gbground: ground	\gbsource: source	\gbPRIMITIVE ACCESS\f5bgdisabledatatransfer	[	memauselloc _ 014000.	"DDT"	memauwriteloc _ 012.	]\gb21Bdoit "primitive call to Aurora"	[	"self waitverticalinterval: 1 ;		disabledatatransfer ;		setsourcewin ;		setrasterwin ;		setfigureground ;		setfunc ;		enabledatatransfer ;		waitverticalinterval: 1."		user croak	] primitive: 105\gb5Benabledatatransfer	[		memauselloc 		_ 014000.	"EDT"	memauwriteloc	_ 010.	memauselloc		_ 0.	]\gb20Bsetconst	["sets the constant register "	memauselloc _ 014000.	"WCReg _ c"	memauwriteloc _ 0263.	memauwriteloc _ 0400 + constantregister.	]\gb10Bsetfigureground	["sets the figure and ground registers "	memauselloc _ 014000.	"set figure"	memauwriteloc _ 0263.	memauwriteloc _ 0400 + figure.	memauselloc _ 014000.	"set ground"	memauwriteloc _ 0267.	memauwriteloc _ 0400 + ground.	]\gb17Bsetfunc	[	memauselloc _ 014000.	"sets the inmode register "	memauwriteloc _ 0261.	memauwriteloc _ (function lshift: 0-8) + 0400.	memauselloc _ 014000.	"sets the op register"	memauwriteloc _ 0262.	memauwriteloc _ (function land: 0377) + 0400.	]\gb9Bsetpmcolortable: colordef	["sets the color table in the picture memory.	self waitverticalinterval: 1.	self disabledatatransfer.	memauselloc _ 014000.	memauwriteloc _ 0271.	memauwriteloc _ 0400 + colordef value.	memauwriteloc _ 0400 + colordef red.	memauwriteloc _ 0400 + colordef green.	memauwriteloc _ 0400 + colordef blue.	self enabledatatransfer."		user croak	] primitive: 106\gb27Bsetrasterwin | r	["sets the destination window"	r _ destination intersect: pmscreenrect.	r empty  []	memauselloc _ 010000.	memauwriteloc _ r leftside +110.	memauselloc _ 010002.	memauwriteloc _ (r top)/2  + 21.	memauselloc _ 010001.	memauwriteloc _ r width.	memauselloc _ 010003.	memauwriteloc _ (r height)/2 - 1.	]\gb18Bsetsourcewin"set alto source window for aurora"	[	memauselloc _ 020000.	memauwriteloc _ mem066. "starting memory address of bit map BCA goes here"	memauselloc _ 020001.	memauwriteloc _ (user screenrect width +15 )/16. " bit maps width in words BMR".	memauselloc _ 020002.	memauwriteloc _ (source width +15) /16. " source width in words"	memauselloc _ 020003.	memauwriteloc _ source height.	memauselloc _ 020010.	memauwriteloc _ 0261." format ... wrap in both x and y and one bit per point."	]\gb12B35b2Bwaitverticalinterval: n | i"wait for n vertical intervals"	["for i to: n do		[		until ((memaureadloc) land: 1) = 1 do []		]"	]\gb27BUTILITIES\f5bgblack | r c i 	[	self standardcolortable.	r _ user screenrect.	user displayoffwhile [		self source: r ;		destination: r;		figure: 1;		ground: 0;		function: CstoreB;		doit. self function: Noop ; doit.]	]\gb6Bset: vec | c 	[	c _ Colordef new.	c value: (vec1) ; red: (vec2) ; green: (vec3) ; blue: (vec4).	self setpmcolortable: c.]\gb9Bstandardcolortable | c i	[	 c _ Colordef new.	self set: (0 255 255 255).	self set: (1 0 0 0).	self set: (2 255 0 0).	self set: (3 192 0 64).	self set: (4 128 0 128).	self set: (5 64 0 192).	self set: (6 0 0 255).	self set: (7 0 64 192).	self set: (8 0 128 128).	self set: (9 0 192 64).	self set: (10 0 255 0).	self set: (11 64 192 0).	self set: (12 128 128 0).	self set: (13 192 64 0).	for i from: (14 to:  255) do	[c value: i ; red: i ; green: i ; blue: i.	self setpmcolortable: c.]]\gb19Btest | r c i 	[	r _ Rectangle new fromuser.	user displayoffwhile [		self source: r ;		destination: r;		figure: 1;		ground: 0;		function: AstoreB;		doit. self function: Noop ; doit.]	]\gb5Bwhite | r c i 	[	self standardcolortable.	r _ user screenrect.	user displayoffwhile [		self source: r ;		destination: r;		figure: 0;		ground: 0;		function: CstoreB;		doit. self function: Noop ; doit.]	]\gb6BDEBUGGING\f5bg\gSystemOrganization classify: Aurora under: 'Aurora'.\gAurora classInit\g"Colordef"l15000z20000\f5bgClass new title: 'Colordef'	subclassof: Object	fields: 'value red green blue'	declare: '';	asFollows\f5bgThis class has not yet been commented\igINIT\f5bgvalue: value red: red green: green blue: blue |	[	]\gb46BACCESS\f5bgblue 	[  blue ]\gb7Bblue: blue \gbgreen 	[  green ]\gb8Bgreen: green \gbred 	[  red ]\gb6Bred: red \gbvalue 	[  value ]\gb8Bvalue: value \gb\gSystemOrganization classify: Colordef under: 'Aurora'.\g