--File BootRam.mesa. Last edited August 17, 1981  5:01 PM By Glen Williams--This is a general routine that takes microcode from a standard--  br-format file and loads the ram on an Alto with it. It takes the boot locus vector --  from the file also (and throws the symbol static away).--This was written for use in ISL's MesaPress implementation(635)\i350IDIRECTORYl4269d2999(0,3392)(1,2528)(2,2944)(3,5120)AltoRam USING[LoadRamAndBoot],l4269d2999Mopcodes USING [zLIW,  zJRAM],l4269d2999PressDefs;l4269d2999l4269d2999BootRam: PROGRAMIMPORTS AltoRamEXPORTS PressDefs=(635)\b8BBEGIN\b1B5blocationinRAM: CARDINAL = 500B;	--location of silentbootinramRamBoot: PUBLIC PROCEDURE [fileName: STRING] =BEGIN	AltoRam.LoadRamAndBoot[fileName, ];--lock in core and boot! Also add Cleanup Proc.END;	-- of RamBootSilentBootInRam: PROCEDURE [arg: CARDINAL] =-- Argument is used by microcode.  We are going to jump to a routine written in microcode with this procedure.MACHINE CODE BEGIN	Mopcodes.zLIW, locationinRAM/256, locationinRAM MOD 256;	Mopcodes.zJRAM;END;	-- of SilentBootInRam\34i27bI9B48f1 7f0 28i47I5i14I1b18B31i111I22f1 8f0 50f1 8f0 13i22IEND. --of BootRam\5i12I