-- File:  PressNetDecompressor.mesa: Routines for decompresing a compressed image.e1(1792)\i-- Last edited:  February 24, 1982  10:23 AM   By:  GWilliams e1\i-- Deleted reporting.DIRECTORYe1\i22IInlineDefs USING [BITOR, BITSHIFT, BITXOR],l4269d3634e1k72(635)--IODefs USING[CR, WriteChar, WriteString],l4269d3634e1k72\iMiscDefs USING [CallDebugger, SetBlock],l4269d3634e1k72PressCompressDefs USING[Color, NibbleSpecType, NibbleRunSpec, remTable, NibbleRange],l4269d3634e1k72PressNetDefs,l4269d3634e1k72SegmentDefs USING[DataSegmentHandle, DefaultBase, DeleteDataSegment, NewDataSegment, SegmentAddress];l4269d3634e1k72e1(1792)\bPressNetDecompressor: PROGRAMe1\b20BIMPORTS InlineDefs, --IODefs,-- MiscDefs, PressCompressDefs, SegmentDefsl4904d3634e1k72(635)\20i11IEXPORTS PressCompressDefsl4904d3634e1k72 =l3633e1(1792)l3633d2998e1BEGIN OPEN InlineDefs, --IODefs,-- MiscDefs, PressCompressDefs, SegmentDefs;l3633d2998e1\23i11I--Globals for the sink processdestA, destB: POINTER TO ARRAY OF WORD;destASeg, destBSeg: DataSegmentHandle;pos: CARDINAL;	--remember next position to fill in output scan.curNibble, destLoc: CARDINAL;scanLineLength: CARDINAL;nibbleSz, nibblesPerScan, arrayLength: CARDINAL;atomCt, runCt: CARDINAL;OpenDecompressor: PUBLIC PROCEDURE [scanLen, nibbleSize: CARDINAL]=BEGIN	atomCt _ runCt _ 0;	arrayLength _ scanLen + 1;	nibbleSz _ nibbleSize;	scanLineLength _ scanLen -1;	destASeg _ NewDataSegment[DefaultBase, (arrayLength+255)/256];	destA _ SegmentAddress[destASeg];	destBSeg _ NewDataSegment[DefaultBase, (arrayLength+255)/256];	destB _ SegmentAddress[destBSeg];	destLoc _ curNibble _ 0;	pos _ nibbleSz - 1;--the first 7-bit byte ends 6 bits into first word from left.	nibblesPerScan _ ((scanLineLength*16)/nibbleSize) + 1;	SetBlock[destA, 0, arrayLength];	SetBlock[destB, 0, arrayLength];END;--of OpenDecompressorNextLine: PUBLIC PROC[]=--XOR the data and check against the original scan lineBEGINi: CARDINAL;	pos _ nibbleSz-1;--the first 7-bit byte ends 6 bits into first word from left.	destLoc _ 0;	curNibble _ 0;	--now can decompress into "A"	FOR i IN [0..scanLineLength] DO destA[i] _ BITXOR[destA[i], destB[i]]; ENDLOOP;	--and zero out B so we can BITOR into it without fear	SetBlock[destB, 0, arrayLength];END;CompareLines: PUBLIC PROC[original: POINTER TO ARRAY OF WORD] RETURNS [same: BOOLEAN _ TRUE]=BEGIN	i: CARDINAL;	FOR i IN [0..scanLineLength)		DO			IF original[i] # destA[i] THEN EXIT;		REPEAT			FINISHED => RETURN[TRUE];		ENDLOOP;	same _ FALSE;	CallDebugger["Data discrepency."L];END;--of CompareLinesGetNibble: PUBLIC PROC[nib: NibbleRunSpec]=--this is called to sink nibble specifications from PressNetCompressorBEGIN	i: CARDINAL;	plunkNibble: PROC[nibb: WORD] =	BEGIN		SELECT pos FROM			6=>   {destB[destLoc] _ BITOR[BITSHIFT[nibb, 9], destB[destLoc]]; pos _ 13};			13=>	{destB[destLoc] _ BITOR[BITSHIFT[nibb, 2], destB[destLoc]]; pos _ 4};			4=>	{destB[destLoc] _ BITOR[BITSHIFT[nibb, -5], destB[destLoc]];					 destLoc _ destLoc+ 1; destB[destLoc] _ BITOR [BITSHIFT[nibb, 11], destB[destLoc]]; pos _ 11};			11=>	{destB[destLoc] _ BITOR[BITSHIFT[nibb, 4], destB[destLoc]]; pos _ 2};			2=>	{destB[destLoc] _ BITOR[BITSHIFT[nibb, -3], destB[destLoc]];					 destLoc _ destLoc+ 1; destB[destLoc] _ BITOR [BITSHIFT[nibb, 13], destB[destLoc]]; pos _ 9};			9=>	{destB[destLoc] _ BITOR[BITSHIFT[nibb, 6], destB[destLoc]]; pos _ 0};			0=>	{destB[destLoc] _ BITOR[BITSHIFT[nibb, -1], destB[destLoc]];					 destLoc _ destLoc+ 1; destB[destLoc] _ BITOR [BITSHIFT[nibb, 15], destB[destLoc]]; pos _ 7};			7=>	{destB[destLoc] _ BITOR[BITSHIFT[nibb, 8], destB[destLoc]]; pos _ 14};			14=>	{destB[destLoc] _ BITOR[BITSHIFT[nibb, 1], destB[destLoc]]; pos _ 5};			5=>	{destB[destLoc] _ BITOR[BITSHIFT[nibb, -6], destB[destLoc]];					 destLoc _ destLoc+ 1; destB[destLoc] _ BITOR [BITSHIFT[nibb, 10], destB[destLoc]]; pos _ 12};			12=>	{destB[destLoc] _ BITOR[BITSHIFT[nibb, 3], destB[destLoc]]; pos _ 3};			3=>	{destB[destLoc] _ BITOR[BITSHIFT[nibb, -4], destB[destLoc]];					 destLoc _ destLoc+ 1; destB[destLoc] _ BITOR [BITSHIFT[nibb, 12], destB[destLoc]]; pos _ 10};			10=>	{destB[destLoc] _ BITOR[BITSHIFT[nibb, 5], destB[destLoc]]; pos _ 1};			1=>	{destB[destLoc] _ BITOR[BITSHIFT[nibb, -2], destB[destLoc]];					 destLoc _ destLoc+ 1; destB[destLoc] _ BITOR [BITSHIFT[nibb, 14], destB[destLoc]]; pos _ 8};			8=>	{destB[destLoc] _ BITOR[BITSHIFT[nibb, 7], destB[destLoc]]; pos _ 15};			15=>	{destB[destLoc] _ BITOR[nibb, destB[destLoc]]; destLoc _ destLoc+ 1; pos _ 6};			ENDCASE;	END;--plunkNibble	WITH nib SELECT FROM		run => {runCt _ runCt + 1;				FOR i IN [1..nibbleCt]				DO					curNibble _ curNibble + 1;					--IF curNibble > nibbleTot THEN ERROR[];					plunkNibble[(IF color = white THEN remTable[nibbleSz] ELSE 0)]				ENDLOOP};		atom => {atomCt _ atomCt + 1;					curNibble _ curNibble + 1;					--IF curNibble > nibbleTot THEN ERROR[];					plunkNibble[thisNibble]};		ENDCASE;END;	--of GetNibbleCloseDecompressor: PUBLIC PROC []=BEGIN	DeleteDataSegment[destASeg];	DeleteDataSegment[destBSeg];	destA _ destB _ NIL;END;END. -- PressNetDecompressor.mesal2999e7k72(635)\f5i31f0I1f5 40f0 54i48I131b16B20f5 29f0 357i61I129i21I2b8B17i56I37i61I32i29I83i55I38b13B285i17bI11B35i71I22b11B1858i13I124i40I147i51I43i14I1b18B110b2B4i29I-- Created:  February 22, 1982  10:10 AM   By:  GWilliams e1(1792)\i-- Last edited:  February 23, 1982  4:34 PM   By:  GWilliams e1\i-- Compiling(635)\i