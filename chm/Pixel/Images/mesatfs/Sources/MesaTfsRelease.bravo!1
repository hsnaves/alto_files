Subject: Mesa Tfs ReleaseTo: AllES^.es, AllPA^, SD-DLOS^.escc: GWilliamsMesaTfs, a Mesa-based transliteration of Alto Tfs is hereby provisionally released.Provisionally because it has not been exhaustively tested. Mesa Tfs was  developed from a set of Mesa modules originated at WRC. They were needed as a base for InterPress; the microcode was made to work, followed by module debugging. Provided are the utilities we all know and love of Tfs plus two other routines -- TfsCreateFile and TfsDeleteFile, functions that were formerly found in the Alto OS. "DiskFindHole" has yet to be written; that will come with time. Those familiar with Tfs will not find this a crucial omission. The package exists as the configuration MesaTfs.bcd. That, the sources and TridentDefs can be found on [Ivy]<GWiliams>MesaTfs>.Details:This is a provisional release in that we plan to move on to InterPress development, and want to release this working system to those who also need the package in a timely manner for their projects. Someday these routines may be merged into the Mesa Streams package. Please feel free to contact me if you have an interest in pursuing this sooner.Mesa Tfs is similar to Tfs in that you must load the microcode before initializing the Trident. A call to RamBoot[tridentMask] (both defined in TridentDefs) will read file TriconDriver.br (also on [Ivy]<GWiliams>MesaTfs>) off your disk and boot the machine.The microcode:Mesa Tfs employs the standard Trident microcode written for the BCPL Tfs, TriConBody.mu. In order to use this code without modification, a predef in XMesaRam.mu was changed so that the two could live together. In particular, the port through which the ECC ucode is accessed was unnecessarily locked out by a microassembler bug. The execution of XMesaRam is not affected. XMesaRam.mu was changed rather than the Tfs ucode because the Tfs ucode will continue to evolve; Alto Mesa is "frozen".In order to add your own microcode, should you so desire, you will need the files TriconDriver.mu, Mesab.mu (standard version) and XmesaRam.mu. The instructions as how to integrate more ucode is documented in [IVY]<Mesa>Doc>Microcode.press (by Roy Levin et. al.) All the ucode files used, including the Mesab.mu are on [IVY]<GWilliams>MesaTfs>.As a note of caution, I recommend that you fully understand the documentation provided for BFS (in the Alto OS reference manual) and for Tfs ([Maxc]<AltoDocs>Tfs.tty) before using this package.Glen WilliamsP.S.Please save queries until next Monday, I'll be out of town the rest of the week.