Heading:z19050qjk40(635)\gPrinting Device File Formatz19050y756qjk40\gPage Numbers: Yes  X: 527  Y: 10.5"z19050qjk40\gInter-Office Memorandumz19050l4445y762\f5bgTo	Interpress Notebook	Date	March 3, 1983z19050l4445d2998e21(0,65535)(1,4445)(5,11684)(6,14146)\g2t2 1t0 19t6 1t0 4t7 1t0From	Ken Pier and Bob Sproull	Location	Palo Altoz19050l4445d2998y716e25\g4t2 1t0 24t6 1t0 8t7 1t0Subject	Printing Device File Format	Organization	PARC/ISLz19050l4445d2998e25\g7t2 1t0 27t6 1t0 12t7 1t0XEROX       z19050l508y644e14(2116)\f2gFiled on: [maxc]<PrintingDocs>PDFormat.memo & .pressz19050l4445d2998e25(0,65535)\gz19050e10(2116)\f1g1. Introductionz19050x3e12jk72\f5bgThis memo describes the format of printing device (PD) files. A PD file encodes a series of low-level imaging commands that are used to create a binary image that is then printed on a printing device; a PD file is similar in concept to "bandslists" in [2]. The interpretation of the imaging commands is device-independent, but the way in which the resulting binary image is presented on the device is device-dependent.z19050x3e12jk40\gAn Alto implementation of a PD interpreter is able to create images on a number of different ROS devices [1]. Although this particular implementation builds a full image buffer on a large disk file, it is possible to interpret PD files on-the-fly as the image is being formed.z19050x3e12jk40\g2. Coordinate systemz19050x3e12jk72\f5bgLocations on the image are measured in a device-dependent coordinate system. The two axis dimensions are labeled s and f. The s, or slow, direction, is measured along the direction of paper transport, i.e., locations with greater values of s are imaged after locations with lesser values of s. Most printers Xerox builds have the s direction oriented along the narrow edge of an 8|X11 inch piece of paper ("landscape scanning"), i.e., it is oriented left-to-right on this piece of paper when you are holding it in the normal reading orientation. The f, or fast, direction is chosen so that sXf points toward the viewer of the image. On this piece of paper, f points vertically, from bottom to top. The origin of the coordinate system is chosen so that it lies on the medium and so that all points on the medium are measured with non-negative values of s and f. On this page, the origin is at the lower-left corner; s points to the right and f points up. On a display ("portrait scanning"), the origin is at the upper-left corner, s points down and f points to the right.z19050x3e12jk40\g113i1I5i2I5i1I5i4I104i1I50i1I38i1I49f3 2f0 168i1I5i4I30i1f3I1f0i1I64i1I194i1I5i1I56i1I25i1I88i1I17i1IThe coordinate s can be thought of as addressing a scan-line and f the pixels along a scan-line. We try to avoid using the terms width and height because these are tied to the final image and the orientation in which it is held rather than to the raster imaging scheme; we speak instead of fSize and sSize. Note that the f direction may or may not indicate the order in which pixels are laid down on the image.z19050l4269x3e12jk40\f1g15i2I48i1I63i5I5i6I145i5I5i5I16i1IThe Pimlico and Puffin color printers and the MIG use portrait scanning.z19050l4269x3e12jk40\f1gThe entire image size is determined by the two quantities imageSSize and imageFSize. A coordinate (s,f) lies on the image iff 0<simageSSize and 0<fimageFSize.z19050x3e12jk40\g58i10I5i10I16i3f3I2f0 25f3 1f0i1f3I3f0i10I6f3 1f0i1f3I3f0i10IThe resolution of the device is determined by two numbers, sResolution and fResolution, which give the number of raster points per inch along the s and f directions, respectively.z19050x3e12jk40\g59i11I5i11I60i1I5i1IA band is a region of the image bandSSize scan-lines wide. That is, the coordinate s lies in band b iff bandSSize*b<sbandSSize*(b+1). PD files must be written with information sorted into band order, i.e., commands that apply to band 0 come first, followed by commands that apply to band 1, and so on.z19050x3e12jk40\g2i4I26i9I42i1I14i1I5i9I1i1f3I1f0i1f3I3f0i9I2i1I3. Imaging modelz19050x3e12jk72\f5bgMost of the commands in a PD file modify the raster image being built up to be sent to the printer. This section describes how the modifications are made. We use the notation M for mask data, C for color data, and I for the image data being built up; conceptually, these are all two-dimensional binary arrays that cover the image. At the beginning of each page, I_ALL[0], i.e., the value of each pixel in I is set to 0. Imaging commands in the PD file then make modifications to I. After all modifications have been made, the image may be printed. Ink will be deposited for each pixel in the image I that has a value of 1, and no ink will be deposited where the value is 0.z19050x3e12jk40\g175i1I16i1I21i1I147i1I42i1I14i7I52i1I118i1IThe changes made to I by an imaging command are governed by the mask M, the color C, and the imaging-model-type, T. The mask M, which is specified by a mask command, conceptually covers the entire image, and has a value 1 for those pixels "inside" the mask and 0 for those points outside the mask. Similarly, the color C covers the entire image; the interpretation of the values in C depends on T. If T=opaque, then pixels in C with a value of 1 will correspond to places where ink should appear in the image, and pixels with value of 0 to places where no ink should appear. If T=transparent, pixels in C with a value of 1 will correspond to places where ink should appear and those with value 0 to places where the page image should remain unmodified, irrespective of the mask values. This mode is named transparent because it allows images laid down previously to show through a color pattern.z19050x3e12jk40\g20i1I48i1I12i1I30i1I11i1I193i1I62i1I12i2I4i1I1i7I16i1I151i1I1i11I12i1I201i11IMore formally, the operation invoked by an imaging command that specifies mask M, C, and imaging-model-type is T is:z19050x3e12jk40\g79i1I2i1I28i1Iif T=opaque then I_(I&nM)V(C&M) else I_IV(C&M)z19050l4269x3e12jk40\bg2B1i1I1i7bI4B1i1I2i1f3I2f0i1I1f3 1f0 1i1f3I1f0i1I2b4B1i1I1i1f3I1f0 1i1f3I1f0i1I4. Interpreter modesz19050x3e12jk72\f5bgThe interpreter may be operated in one of two modes, determined by the creator of the PD file. These modes are:z19050x3e12jk40\g1. bandMode. The PD file gives commands for building up each band of the image, entirely independently of other bands. The commands in the file that apply to a given band are followed by an endBand command to signal that the band is finished and may be printed.z19050l4269x3e12jk40\g3i8I179i7I2. leftOverMode. The PD file contains imaging commands for building up each band of the image, but a command may specify a modification to the image that extends to subsequent bands beyond the initial one. The PD interpreter is responsible for maintaining "leftover lists" to remember necessary information about objects begun in one band that carry over to subsequent bands. Conceptually, the leftover list contains a triple (M, C, T, P) that records the mask, color, imaging-model type, and priority (see below) of the imaging command that is left over.z19050l4269x3e12jk40\g3i13I411i10IIn both cases, the information is sorted by band number, i.e., commands that apply to band 0 appear before commands that apply to band 1. Some interpreters may support only bandMode.z19050x3e12jk40\g173i8IWhen the interpreter is operated in bandMode, an operation called band clipping is performed. Band clipping clips all imaging commands for a band so as to exclude any parts of the modification that lie outside the band.z19050x3e12jk40\g36i9I21i13IFor example, band clipping allows an imaging command that affects a region 35<s<63 to be included in the imaging commands for a band that extends over 40<s<49. As a consequence, imaging commands in bandMode may have values of s that lie outside the band in question and that are not in sorted order, but band clipping will restrict the modifications to a single band.z19050l4269x3e12jk40\f1g78i1I75i1I43i8I20i1IIn many cases, the order in which commands are executed is importantthis is the priority issue, as described in Interpress. The need to preserve priority interacts with the leftOverMode interpreter mode. There is no problem with bandMode, since every operation on the image is specified in the PD file and the order of occurrence in the file will be the order of execution by the interpreter. The problem arises when leftovers are used because the order of execution of leftovers and PD file commands must be determined. To solve this problem, a command named setPriority may be included in PD files to set the priority (modally) of subsequent imaging commands: commands with a larger priority number are executed after commands with lower priorities. Within the sequence of imaging commands for a band recorded in a PD file, priority may not decrease, i.e., commands must be sorted in order of increasing priority. The interpreter is responsible for ordering the processing of PD file entires and leftover entries so as to preserve priority order.z19050x3e12jk40\g81i8I85i13I16i1I26i8I8i5I310i11ICommands that appear in a PD file are interpreted in order. However, when a setPriority command is encountered, interpretation may switch to the leftover list (or back). z19050l4269x3e12jk40\f1g76i11I83f05. Data structuresz19050x3e12jk72\f5bgA PD file is a sequence of 16-bit words, prepared according to a format explained later in the document. In the description of formats, we often make use of Mesa-like structures:z19050x3e12jk40\g34i5ICARD is a 16-bit cardinal. Unless othewise annotated, CARD is assumed.z19050l4269x3e12jk40\f1g4f0 50f1 4f0CARD24 is a 24-bit cardinal.z19050l4269x3e12jk40\f1g6f0LONG CARD encodes a 32-bit cardinal as two words, with low-order word appearing first in the file.z19050l4269x3e12jk40\f1g9f0An enumerated type such as {noFeedSheet, feedSheet} has as concrete representation a CARD (or field within a CARD) with value 0 corresponding to the first identifier in the enumeration, 1 to the second, etc.z19050l4269x3e12jk40\g28i22I35f1 4f0 20f1 4f0Records are described by surrounding descriptions of their fields with brackets [ ].z19050l4269x3e12jk40\gAll figures are drawn with larger memory addresses nearer the bottom of the page.z19050x3e12jk40\gLoad. The PD file may contain commands that store or read data in an area of the PD interpreter's memory called the load. This memory is used to hold character masks and color specifications that are referenced repeatedly in a PD file, thus reducing the size of the PD file by using references rather than the actual data. The load is an array of maxLoadWords 16-bit words, with long cardinal addresses i, 0<imaxLoadWords.z19050x3e12jk40\ig6I110i4I227i12I44i2I2f3 1f0i1f3I3f0i13IThere is a storeLoad command available to store data in the load. The state of the load is retained from image to image; storeLoad commands are processed in the order they appear in the PD file.  The intent is that the load be set at the beginning of each image, immediately preceding a startImage command (Section 6.2).z19050x3e12jk40\gIt is not recommended to change the contents of the load in the middle of an image. Such a change will work only if the it does not disturb portions of the load that are needed for any subsequent imaging commands, particularly imaging commands that are carried forward by the interpreter using leftovers.z19050l4269x3e12jk40\f1gSample arrays. Several imaging commands make use of a type SampleArray, which represents a rectangular array of binary samples (0 and 1). This type is shown schematically in Figure 2.z19050x3e12jk40\ig14I45i11ISampleArray: [sSize, fSize: CARD, samples: SEQUENCE COMPUTED CARD OF CARD] contains two cardinals giving the size of the array (sSize and fSize), followed by sSize scan-lines, each one of which contains ifSize/16j words of sample data. The array represents the region 0<ssSize and 0<ffSize. The first scan-line of sample data is for s=0, the second for s=1, etc. Within a scan-line, the high-order bit of the first word corresponds to f=0, the next-to-high-order bit to f=1, etc. Each scan-line is padded with zeroes to a word boundary.z19050l4269x3e12jk40\ig13I1i13f1I5f0 2i8f1I33f0 53i5I5i5I15i5I40f3 1f0i5I3f3 1f0 56f3 1f0i1f3I3f0i5I6f3 1f0i1f3I3f0i5I44i1I19i1I81i1I34i1ITiles. A tile is a sample array that is given a particular location in the image and is tiled to cover the entire image. It is shown schematically in Figure 2.z19050x3e12jk40\ig7I81i5ITile: [phase, sMin, fMin: CARD, sa: SampleArray]. The sample array sa is repeated to cover the entire image. Origins of the array are at (sMin+i*sa.sSize, fMin+j*sa.fSize+i*phase), for all integers i and j.z19050l4269x3e12jk40\ig6I1i18f1I5f0 2i3f1I1f0 31i2I69i4I1i10I2i4I1i10I1i1I1i5I20i1I5i2ITiles are implemented very efficiently if phase=sMin=fMin=0 and sa.sSize=sa.fSize=16. These are sometimes called "inkwells."z19050l4269x3e12jk40\f1g124f0Run Groups. A run group uses a run-length encoding to record binary data.z19050x3e12jk40\ig10IRun: [fMin: CARD, lastRun: BOOLEAN, fSize: [0..32767]]. The region fMin<f<fMin+fSize1 contains all 1's. The boolean lastRun is true if this is the last run on this scan-line.z19050l4269x3e12jk40\ig5I1i5I1f1 6f0i9f1I8f0 1i6I25i4f3I1f0i1f3I1f0i10I33i7IRunGroup: [sSize: CARD, runs: SEQUENCE COMPUTED CARD OF Run]. A run group contains runs for sSize scan-lines; each scan-line consists of one or more runs ending with a run with the lastRun boolean true.z19050l4269x3e12jk40\ig9I2i6I1f1 4f0 2i5f1I26f0 37i5I84i7I6.  PD File Contentsz19050x3e12k72\f5bgThe overall file structure is illustrated in Figure 3. A PD file begins with a record called the herald. Then each image is described. Each image begins with a startImage command; within each image, endBand commands mark the end of each band. At the end of the file is an endDocument command.z19050x3e12jk40\g97i6I57i10I29i7I66i11I6.1 Heraldz19050x3e12jk72\bgThe herald contains information used to initialize the interpreter. The fields in the record are (Figure 4):z19050x3e12jk40\gpassword: CARD=125252B. The password identifies the file as a PD file. All versions will use this password.z19050l4269x3e12jk40\ig8I2f1 4f0version: CARD. Identifies the version for which this PD file is constructed. This document defines files for which version=1.z19050l4269x3e12jk40\ig7I2f1 4f0deviceCode: CARD. Identifies the device for which this PD file is constructed. Section 7 gives device codes and parameters as of this writing.z19050l4269x3e12jk40\ig10I2f1 4f0sResolution, fResolution: CARD. Resolution of the device in pixels per inch along the s and f directions.z19050l4269x3e12jk40\ig24I2f1 4f0 56i1I5i1IimageSSize, imageFSize: CARD. Total image size assumed by the images in this PD file. These dimensions may not be larger than the device can handle. The PD interpreter never translates an image (e.g., centers it)the (0, 0) point must always lie at a corner of the page.z19050l4269x3e12jk40\ig22I2f1 4f0 140i5IbandSSize: CARD. The number of scan-lines in a band; otherwise ignored.z19050l4269x3e12jk40\ig9I2f1 4f0maxLoadWords: LONG CARD. The size of the memory area that must be allocated to the load.z19050l4269x3e12jk40\ig12I2f1 9f0copies: CARD. The number of copies of the file to print.z19050l4269x3e12jk40\ig6I2f1 4f0The PD interpreter will examine the herald to determine whether it can print the file. It may disagree about the properties of the device or it may not be able to accommodate the resources requested (e.g., maxLoadWords). For any of these reasons, the interpreter may reject the file.z19050x3e12jk40\g206i12I6.2 Control commandsz19050x3e12jk72\bgControl commands delineate portions of a PD file and set several state variables that control the interpretation of imaging commands (curC, curT, and curP). At the beginning of each band, curC := ALL[1], curT := opaque, and curP := 0.z19050x3e12jk40\g134i11I5i4I34i4I12i4I4i8I4i4IstartImage[interpreterMode: {bandMode, leftOverMode}, feed, strip: {false, true}, tonerColor: [0..16), passBands, nBands, fMinPage, fSizePage: CARD]. The startImage command precedes any imaging commands for an image. It tells the printer whether a new sheet of paper is to be fed to the printer to hold the image, and whether the sheet is to be stripped out of the printer after the image is formed. For all black-and-white printers, feed and strip must be true, but for color printers that take several passes to assemble a multi-colored page, a page will be fed on the first pass and stripped on the last pass. The color of the toner to use for the image is specified by tonerColor:z19050l4269x3e12jk40\ig10f3I1f0 1i16I2i22I3i12I2i11I3i11I10i9f1I2f0i29f1I4f0 7i10I270i4I5i5I9i4I212i10I0	Black1	Cyan2	Magenta3	Yellowz19050l5539x3e12jk40\gThe interpreterMode field determines how the interpreter will operate in the image that is starting.z19050l4269x3e12jk40\g4i15IThe passBands argument specifies how many initial bands on the page are empty; nBands determines how many bands are to be imaged (some may not have any images in them, of course). The fMinPage and fSizePage arguments specify the range of values of f that encompasses the entire image of the page. These numbers allow the interpreter to allocate smaller band and disk buffers for images. For multiple separations being imaged on the same sheet, all separations should have the same values for these four parameters.z19050l4269x3e12jk40\g4i9I66i6I99i8I5i9I42i1IsetPriority[priority: CARD24]. This command sets the priority for all subsequent imaging commands, i.e., curP := priority.z19050l4269x3e12jk40\ig11f3I2f0 1i9I1f1 6f0 77i4I4i8IsetColorInk. This command sets the current color curC := ALL[1], and curT := opaque.z19050l4269x3e12jk40\ig12I37i4I16i4I4i7IsetColorClear. This command sets the current color curC := ALL[0], and curT := opaque.z19050l4269x3e12jk40\ig14I37i4I16i4I4i7IsetColorTile[t: {opaque, transparent}, addr: LONG CARD]. This command sets the current color curC := (the Tile at address addr in the load), and curT := t.z19050l4269x3e12jk40\ig12f3I2f0 1i3I1i19I3i6f1I4f0 1f1 4f0 39i4I9i4I12i4I19i4I4iendBand. This control command signals the end of a band. There are nBands such commands in each image.z19050l4269x3e12jk40\ig8I59i6IendDocument. This command signals the end of the document. The PD interpreter ignores any information following this command.z19050l4269x3e12jk40\ig11IstoreLoad[firstAddress: LONG CARD, wordCount: CARD, data: WORD [1..wordCount]]. This command causes the data words to be stored in the load, starting with the word whose address relative to the start of the load is firstAddress.z19050l4269x3e12jk40\ig9f3I1f0 1i13I1f1 4f0 1f1 4f0 2i10I1f1 4f0 2i5I1f1 4f0 5i9I28i4I27i4I76i13IdeviceCommand[wordCount: CARD, data: WORD [1..wordCount]]. This command cause the data words to be interpreted in a device-dependent way by the printer.z19050l4269x3e12jk40\ig13f3I1f0 1i10I1f1 4f0 2i4I2f1 4f0 5i9I27i4I6.3 Imaging commandsz19050x3e12jk72\bgThere are seven commands that modify the image I being built up:z19050x3e12jk40\g47i1IimagePrimitive={maskSamplesRef, maskRunGroupRef, maskRectangle, maskTrapezoid, maskRunGroup, maskSamples, colorData};z19050l4269x3e12jk40\ig14I2i99IThe following paragraphs define the interpretation of each mask type and the parameters it requires. Unless otherwise noted, C=curC, T=curT, and P=curP.z19050x3e12jk40\g125i16I4i7ImaskRectangle[sMin, sSize, fMin, fSize: CARD]. M is set to 1 for (s,f) in the region sMin<s<sMin+sSize1, fMinFirst<f<fMinFirst+fSizeFirst1; M is zero everywhere else.z19050l4269x3e12jk40\ig13f3I2f0 1i24I2f1 4f0 1i3I18i3f3I2f0 16i4f3I1f0i1f3I1f0i4I1i5I2i11f3I1f0i1f3I1f0i9I1i10I4i1ImaskTrapezoid[sMin, sSize, fMin, fSize, fMinLast, fSizeLast: CARD]. M is set to 1 for (s,f) in the region bounded by the trapezoid whose vertices are at (sMin, fMin), (sMin, fMin+fSize1), (sMin+sSize1, fMinLast+fSizeLast1), (sMin+sSize1, fMinLast); M is zero everywhere else.z19050l4269x3e12jk40\ig13f3I2f0 1i45I2f1 4f0 3i1I18i3f3I2f0 64i10I4i10I1i5I6i4I1i5I4i8I1i9I6i4I1i5I4i8I3i1IThe interpolation scheme used by maskTrapezoid must be known precisely, in case the creator of a PD file wants to predict precisely which pixels will be inside the mask. The inside of the mask is those pixels (s,f) such that sMin<s<sMin+sSize1 and b(s)<ft(s), where:b(s)=fMin+(fMinLastfMin)*(ssMin)/(sSize1)t(s)=fMin+fSize+(fMinLast+fSizeLastfMinfSize)*(ssMin)/(sSize1).z19050l5539x3e12jk40\g33i13I164i3f3I2f0 12i4f3I1f0i1f3I1f0i4I1i5I7i1I1i1I1f3 1f0i1f3I3f0i1I1i1I10f1i1I1i1I2i4I2i8I1i4I3i1I1i4I3i5I4i1I1i1I2i4I1i5I2i8I1i9I1i4I1i5I3i1I1i4I3i5I3i1ImaskRunGroup[sMin: CARD, rg: RunGroup]. M is set to 1 in the region sMin<s<sMin+rg.sSize1, wherever specified by a run in rg.z19050l4269x3e12jk40\ig12f3I2f0 1i4I2f1 4f0i6I11i1I27i4f3I1f0i1f3I1f0i4I1i8I2i1I31i4ImaskSamples[sMin, fMin: CARD, a: SampleArray]. M is obtained from the sampled data, as described in Section 4, in the region sMin<s<sMin+a.sSize1, fMin<f<fMin+a.fSize1.z19050l4269x3e12jk40\ig11f3I2f0 1i12f1I6f0i2I15i1I77i4f3I1f0i1f3I1f0i4I1i7I4i4f3I1f0i1f3I1f0i4I1i7ImaskRunGroupRef[addr: CARD24, sMin, fMin: CARD]. Like maskRunGroup, but the run group itself is located at address addr in the load. The value of fMin is added to the fMin's in the run group. To make a compact file, only 24 bits of addr are put in the file, and in a funny order.z19050l4269x3e12jk40\ig15f3I2f0 1i5I1f1 6f0 2i10I2f1 4f0 8i12I49i4I27i4I17i6I19i87ImaskSamplesRef[addr: CARD24, sMin, fMin: CARD]. Like maskSamples, but the run group itself is located at address addr in the load. To make a compact file, only 24 bits of addr are put in the file, and in a funny order.z19050l4269x3e12jk40\ig14f3I2f0 1i5I1f1 6f0 2i12f1I4f0 8i11I49i4I14icolorSamples[sMin, fMin: CARD, a: SampleArray]. C is obtained from the sampled data, as described in Section 4, in the region sMin<s<sMin+a.sSize1, fMin<f<fMin+a.fSize1. M is 1 in the region sMin<s<sMin+a.sSize1, fMin<f<fMin+a.fSize1, and 0 elsewhere. T is opaque.z19050l4269x3e12jk40\ig12f3I2f0 1i12f1I6f0i2I15i1I77i4f3I1f0i1f3I1f0i4I1i7I4i4f3I1f0i1f3I1f0i4I1i7I4i1I20i4f3I1f0i1f3I1f0i4I1i7I4i4f3I1f0i1f3I1f0i4I1i7I21i1I4i7IWarning: Leftovers are not maintained for maskRunGroup, maskSamples, or colorSamples because they require variable-length data in the leftover list. To use these forms, the PD file must contain proper mask commands in each band. However, the load-reference forms maintain proper leftovers.z19050x3e12jk40\g23i3I16i12I2i11I5i12I63i1I6.4 Encoding the commandsz19050x3e12jk72\bgThe imaging and control commands are encoded with a view to reducing the size of the most common PD files. Many of the commands have arguments, which are encoded in records immediately following the one-word command descriptor. The data fields are described in Section 6, and Figures 57 show how the fields are laid out. Since character instances appear very frequently, the formats for maskRunGroupRef and maskSamplesRef are short.z19050x3e12jk40\g388i15I5i14I7. Devicesz19050x3e12jk72\f5bgAt present, the only way to print PD files is with the Alto program PDPrint [1]. It will print on a variety of devices, listed below. If this program is run on a wide-bodied Alto (extended memory), maxLoadWords cannot exceed 60,000. If the program is run on a conventional Alto II, maxLoadWords is restricted to 20,000.z19050x3e12jk40\g198i12I72i12IThe following paragraphs describe the properties of various printing devices that can be controlled by PD files. Note z19050x3e12jk40\gRaven (Quoth). Device code=1. Landscape. sResolution=fResolution=300, imageSSize=2550, imageFSize=3300, 16<bandSSize<100.z19050x3e12jk40\ig15I26i23I6i11I6i11I8f3 1f0i9f3I1f0 4iHornet (Stinger). Device code=2. Landscape. sResolution=fResolution=384, imageSSize=3264, imageFSize=4224, 16<bandSSize<100.z19050x3e12jk40\ig18I26i23I6i11I6i11I8f3 1f0i9f3I1f0 4iGnat. Device code=3. Landscape. xxz19050x3e12jk40\ig6I28iMIG. Device code=4. Portrait. xxz19050x3e12jk40\ig5I27iReticleMaker. Device code=5. Portrait. xxz19050x3e12jk40\ig14I27iPuffin (Lilac). Device code=6. Portrait. sResolution=fResolution=384, imageSSize=4224, imageFSize=3264, bandSSize=16.z19050x3e12jk40\ig16I25i23I6i11I6i11I6i9I4iReferencesz19050x3e12jk40\f5bg10f0Bi[1] "PD Printer Operation", March 30, 1983. Filed on [maxc]<printingdocs>pdprintops.press.z19050x3e12jk40\g[2] O. Sperber, J. Kellman, R.E. Joiner, and S.R. Dashiell, "A VLSI based Image Generation Architecture for Low End Electronic Printing," November 1982. RBG/ED/EED/ESDz19050x3e12jk40\g167i